{"version":3,"sources":["Components/statistics/Statistics.js","Components/notification/Notification.js","Components/feedbackOptions/FeedbackOptions.js","Components/section/Section.js","Components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","percentage","Notification","message","FeedbackOptions","fn","type","onClick","Section","title","children","Feedback","useState","setGood","setNeutral","setBad","countTotal","property","prev","alert","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAaeA,EAbI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAEjD,OACQ,oCACQ,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,uCAAUC,EAAV,YCFDC,EANM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,6BAAKA,KCUEC,EAZS,SAAC,GAAY,IAAVC,EAAS,EAATA,GACvB,OACI,mCACI,gCACI,wBAAQC,KAAK,SAASC,QAAS,kBAAMF,EAAG,SAAxC,kBACA,wBAAQC,KAAK,SAASC,QAAS,kBAAMF,EAAG,YAAxC,qBACA,wBAAQC,KAAK,SAASC,QAAS,kBAAMF,EAAG,QAAxC,uBCIDG,EAVC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtB,OACI,gCACI,6BAAKD,IACJC,MCGE,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBgB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOb,EAAP,KAAYgB,EAAZ,KAOMC,EAAa,WAEjB,OADYjB,EAAMF,EAAOC,GAiB3B,OACE,qCACE,cAAC,EAAD,CAASW,MAAM,iBAAf,SACE,cAAC,EAAD,CAAiBJ,GAhBJ,SAACY,GAClB,OAAQA,GACN,IAAK,OACH,OAAOJ,GAAQ,SAAAK,GAAI,OAAKA,EAAO,KACjC,IAAK,UACH,OAAOJ,GAAW,SAAAI,GAAI,OAAKA,EAAO,KACpC,IAAK,MACH,OAAOH,GAAO,SAAAG,GAAI,OAAKA,EAAO,KAChC,QACEC,MAAO,uBAUT,cAAC,EAAD,CAASV,MAAM,aAAf,SACoB,IAAjBO,IACG,cAAC,EAAD,CACAnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,IACPf,WAnCImB,KAAKC,MAAc,IAAPxB,GAAeE,EAAMF,EAAOC,MAoC5C,cAAC,EAAD,CAAcK,QAAQ,2BC5ClCmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6b07e346.chunk.js","sourcesContent":["const Statistics = ({ good, neutral, bad, total, percentage }) => {\n    \nreturn (\n        <section>\n                <p>good: {good}</p>\n                <p>neutral: {neutral}</p>\n                <p>bad: {bad}</p>\n                <p>total: {total}</p>\n                <p>Good: {percentage}% </p>\n        </section>\n    );\n}\n\nexport default Statistics;","const Notification = ({ message }) => {\n    return (\n        <h2>{message}</h2>\n    );\n}\n\nexport default Notification;","const FeedbackOptions = ({ fn }) => {\n    return (\n        <>\n            <div>\n                <button type=\"button\" onClick={() => fn('good')}>good</button>\n                <button type=\"button\" onClick={() => fn('neutral')}>neutral</button> \n                <button type=\"button\" onClick={() => fn('bad')}>bad</button>\n            </div>\n        </>\n    );\n}\n\nexport default FeedbackOptions;","const Section = ({ title, children }) => {\n    return (\n        <div>\n            <h2>{title}</h2>\n            {children}\n        </div>\n        \n    );\n}\n\nexport default Section;","\nimport React, { useState } from 'react'\nimport Statistics from './statistics/Statistics';\nimport Notification from './notification/Notification';\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\nimport Section from './section/Section';\n\nexport default function Feedback () {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countPositiveFeedbackPercentage = () => {\n    const res = Math.floor((good * 100) / (bad + good + neutral))\n    return (res)\n  }\n\n  const countTotal = () => {\n    const res = bad + good + neutral;\n    return res;\n  }\n\n  const updateStat = (property) => {\n    switch (property) {\n      case 'good':\n        return setGood(prev => (prev + 1));\n      case 'neutral':\n        return setNeutral(prev => (prev + 1));\n      case 'bad':\n        return setBad(prev => (prev + 1));\n      default:\n        alert (\"set more info\");\n    } \n  };\n\n  return (\n    <>\n      <Section title=\"Leave feedback\">\n        <FeedbackOptions fn={updateStat} />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {countTotal() !== 0\n          ? <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotal()}\n            percentage={countPositiveFeedbackPercentage()} />\n          : <Notification message='No feedback given' />}\n      </Section>\n    </>\n  )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}